importScripts("../v3.0/utils.js"),importScripts("https://cdnjs.cloudflare.com/ajax/libs/jstat/1.7.1/jstat.min.js");export const index=(t,a,e,r,l,s)=>{const o=Date.now();let d=t["y[]"].map(t=>l[t]).join(", "),n=Ô(a[0].length,d),i=t["y[]"].map(t=>!a[r[t]].some(t=>null===t||isNaN(t))&&ʹ(mean(a[r[t]],e))),b="";for(let a=0,e=i.length;a<e;a++)if(!1===i[a])return{error:`Invalid variable: <b class="text-warning">${l[t["y[]"][a]]}</b> contains non-numeric value`+shake("y[]")};var c=t["y[]"].length,m=len(a[r[t["y[]"][0]]],e),p=m-2,y=getRank(a,t["y[]"].map(t=>r[t]),t.weight),h=y.map(t=>getST(t.slice(),e)).map(t=>(m**3-m-t)/12),f=[];for(let a=0;a<c;a++){f[a]=[];for(let r=0;r<c;r++)if(a<r){let l=sumsq(sub(y[a],y[r]),e),s=(h[a]+h[r]-l)/2/(h[a]*h[r])**.5,o=-Math.abs(s*(p/(1-s**2))**.5),d=jStat.studentt.cdf(o,p)*(Number(t.a)+1),n=`<div class="fz-16 my-1 pb-1 fw-600">${Ś(s,3)}</div>`,i=`<div class="fz-11 text-left" style="border-top: 1px dashed rgba(${Math.abs(s)>.5?"255,255,255":"255,65,105"},.5)">Sig.= ${Ś(d,3)}</div>`;f[a][r]={cell:s>0?`<td style="background:rgba(255,65,105,${s}); color:rgb(${s>.5?"255,255,255":"255,65,105"});">${n+i}</td>`:`<td style="background:rgba(0,123,255,${-s}); color:rgb(${s<-.5?"255,255,255":"0,123,255"});">${n+i}</td>`,r:Ś(s,3)}}else f[a][r]=a>r?f[r][a]:""}return b+='<h6>Correlation Matrix*</h6><div class="ovy-a mb-1"><table class="table table-sm table-bordered w-100 mb-0 table-top-left-header"><tbody><tr><td></td>'+t["y[]"].map(t=>`<td>${l[t]}</td>`).join("")+"<tr>"+t["y[]"].map((a,e)=>`<tr><td>${l[a]}</td>\n\t\t  \t${t["y[]"].map((t,a)=>e===a?"<td></td>":f[e][a].cell).join("")}</tr>`).join("")+"</tbody></table></div>*) Test of significance: "+["One-tailed","Two-tailed"][t.a],t.c&&(b+='<hr><h6>Scatter Plot</h6><div class="ovy-a mb-1"><table class="table table-sm table-bordered w-auto mb-0 table-top-left-header"><tbody><tr><td></td>'+t["y[]"].map(t=>`<td>${l[t]}</td>`).join("")+"<tr>"+t["y[]"].map((e,s)=>`<tr><td>${l[e]}</td>${t["y[]"].map((e,l)=>`<td class="p-0">\n\t\t  \t${s===l?"":highcharts(o+"_"+s+"_"+l,["scatterMini"],JSON.stringify({title:{text:"r = "+f[s][l].r},series:[{data:trans([a[r[t["y[]"][l]]],a[r[t["y[]"][s]]]])}]}))}\n\t\t  \t</td>`).join("")}</tr>`).join("")+"</tbody></table></div>"),{title:"Spearman's Rank Correlation",vars:d,body:n+b}};const getRank=(t,a,e)=>a.map((a,r)=>{let l=rank(t[a],t[e]);return t[a].map(t=>l.find(a=>a[0]===t)[1])}),getST=(t,a)=>{var e,r=null,l=[];if(a){let s=msort([t,a],0);t=s[0],a=s[1],t.forEach((t,s)=>{l[s]=0,t===r?l[e]=(l[e]||a[e])+a[s]:(r=t,e=s)})}else t.sort((t,a)=>t>a?1:t<a?-1:0),t.forEach((t,a)=>{l[a]=0,t===r?l[e]=(l[e]||1)+1:(r=t,e=a)});return sum(sub(l.pow(3),l),a)};