importScripts("../v3.0/utils.js");export const index=(a,e,t,n,r,l)=>{a["g[]"]=JSON.parse("["+a.gOrder+"]");const i=Date.now();let m=a["y[]"].map(a=>r[a]).join(", "),g=Ô(e[0].length,m,a["g[]"].length?`grouped by <b>${a["g[]"].map(a=>r[a]).join(", ")}</b>`:""),o=a["y[]"].map(a=>!e[n[a]].some(a=>null===a||isNaN(a))&&!l.find(e=>e[0]==r[a])&&ʹ(mean(e[n[a]],t))),s="";for(let t=0,l=a["g[]"].length;t<l;t++)if(e[n[a["g[]"][t]]].unq().length>100)return{error:`Invalid group: <b class="text-warning">${r[a["g[]"][t]]}</b> contains more than 100 unique values`+shake("g[]")};var u=["Frequency","Sum","Mean","Min","Max",{l:"Range"},"Variance","Standard Deviation",{l:"Population Variance"},{l:"Population Standard Deviation"},{l:"Geometric Mean"},{l:"Median"}],p="";if(a["g[]"].length){var c=a["g[]"].map(a=>n[a]),b=c.map(a=>e[a].unq()),d=c.length>1?combi(b):trans([combi(b)]),h=[];d.forEach((a,t)=>{h[t]=e.slice(0),a.forEach((a,e)=>{if(h[t]){let n=trans(h[t]).filter(t=>t[c[e]]===a);h[t]=!!n.length&&trans(n)}})}),d=d.filter((a,e)=>h[e]),p=a["y[]"].reduce((e,t,i)=>e.concat(h.filter(a=>a).map((e,m)=>[r[t],...d[m].map((e,t)=>vlabel(e,l,r[a["g[]"][t]])),...getSummary(e[n[t]],e[a.weight],o[i],[])])),[]),s=datatablesWithToggle("Summary Table","table-"+i,["Variable",...a["g[]"].map(a=>r[a])],u,p,[...a["g[]"].keys()])}else p=a["y[]"].map((a,l)=>[r[a],...getSummary(e[n[a]],t,o[l])]),s=datatablesWithToggle("Summary Table","table-"+i,["Variable"],u,p,[]);return{title:"Summary",vars:m,body:g+s}};const getSummary=(a,e,t)=>{if(!1===t)return[len(a,e),"-","-","-","-","-","-","-","-","-","-","-"];{if(e){let t=msort([a,e],0);a=t[0],e=t[1]}else a.sort((a,e)=>a>e?1:a<e?-1:0);let n=len(a,e);return n>2?[n,Ś(sum(a,e),t-2),Ś(mean(a,e),t),a.min(),a.max(),Ś(a.max()-a.min(),t-2),Ś(vr(a,e),t),Ś(sd(a,e),t),Ś(vrp(a,e),t),Ś(sdp(a,e),t),Ś(gmean(a,e),t),Ś(quartile(a,.5,e),t-1)]:[n,Ś(sum(a,e),t-2),Ś(mean(a,e),t),a.min(),a.max(),Ś(a.max()-a.min(),t-2),"-","-","-","-",Ś(gmean(a,e),t),Ś(quartile(a,.5,e),t-1)]}};