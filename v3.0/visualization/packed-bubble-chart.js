importScripts("../v3.0/utils.js");export const index=(t,e,a,n,l,r)=>{t["g[]"]=JSON.parse("["+t.gOrder+"]");const i=Date.now();let s=t["y[]"].map(t=>l[t]).join(", "),g=Ô(e[0].length,s,t["g[]"].length?`by <b>${t["g[]"].map(t=>l[t]).join(", ")}</b>`:""),h=t["y[]"].map(t=>!e[n[t]].some(t=>null===t||isNaN(t))&&ʹ(mean(e[n[t]],a))),o="";var u=[],c=["Sum","Frequency","Mean"][t.a];for(let e=0,a=h.length;e<a;e++)if(!1===h[e])return{error:`Invalid variable: <b class="text-warning">${l[t["y[]"][e]]}</b> contains non-numeric value`+shake("y[]")};for(let a=0,r=t["g[]"].length;a<r;a++)if(u[a]=e[n[t["g[]"][a]]].unq(),u[a].length>100)return{error:`Invalid group: <b class="text-warning">${l[t["g[]"][a]]}</b> contains more than 100 unique values`+shake("g[]")};const m=[sum,len,mean][t.a];var p=split(e,n[t["g[]"][0]]);return u[1]&&(split2=p.map(e=>split(e,n[t["g[]"][1]]))),t["y[]"].forEach((e,a)=>{if(u[1]){let s=split2.map((i,s)=>i.map((i,s)=>({name:vlabel(i[n[t["g[]"][1]]][0],r,l[t["g[]"][1]]),value:ʺ(m(i[n[e]],i[n[t.weight]]),h[a])})).filter(t=>t.value>0));o+=(a?"<hr>":"")+`<h6>${l[e]}</h6>`+highcharts(i+a,["packedBubble"],JSON.stringify({chart:{height:450},series:s.map((e,a)=>({name:vlabel(u[0][a],r,l[t["g[]"][0]]),data:e}))}))}else o+=(a?"<hr>":"")+`<h6>${l[e]}</h6>`+highcharts(i+a,["packedBubble"],`{\n\t\t\t\t\tseries: [{\n\t\t\t\t\t\tname: '${c} of ${l[e]}',\n\t\t\t\t\t\tdata: ${JSON.stringify(p.map((i,s)=>({name:vlabel(u[0][s],r,l[t["g[]"][0]]),value:ʺ(m(i[n[e]],i[n[t.weight]]),h[a])})).filter(t=>t.value>0))},\n\t\t\t\t\t\tcolor: Highcharts.getOptions().colors[${a}]\n\t\t\t\t\t}],\n\t\t\t\t\tlegend: { enabled: false },\n\t\t\t\t}`)}),{title:"Packed Bubble Chart",vars:s,body:g+(o+=highchartsReflow(t["y[]"].map((t,e)=>i+e)))}};