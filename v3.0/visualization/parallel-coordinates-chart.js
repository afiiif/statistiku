importScripts("../v3.0/utils.js");export const index=(t,a,n,r,s,e)=>{t["y[]"]=JSON.parse("["+t.yOrder+"]");const i=Date.now();let o=t["y[]"].map(t=>s[t]).join(", "),l=Ã”(a[0].length,o,t.g.length?`by <b>${s[t.g]}</b>`:""),g="";var p=["line","spline"][t.a],y=[],h=[];if(t["y[]"].map((n,i)=>{h[i]={},(a[r[n]].some(t=>isNaN(t))||e.find(t=>t[0]==s[n]))&&(y[i]=a[r[n]].unq(),h[i].categories=y[i].map((a,n)=>vlabel(a,e,s[t["y[]"][i]])),a[r[n]]=a[r[n]].map(t=>y[i].indexOf(t)))}),t.g.length){var c=a[r[t.g]].unq(),m=a[r[t.g]].map(t=>c.indexOf(t));if(c.length>20)return{error:`Group (<b class="text-warning">${s[t.g]}</b>) must not contain more than 20 unique values`+shake("g")};g+="<h6>Parallel Coordinates Chart</h6>"+highcharts(i,["parallelCoordinates"],`\n\t\t\t\t\t{\n\t\t\t\t\t\tchart: {\n\t\t\t\t\t\t\ttype: '${p}',\n\t\t\t\t\t\t},\n\t\t\t\t\t\txAxis: {\n\t\t\t\t\t\t\tcategories: ${JSON.stringify(t["y[]"].map(t=>s[t]))},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tyAxis: ${JSON.stringify(h)},\n\t\t\t\t\t\tcolors: ['rgba(23,198,113,.4)'],\n\t\t\t\t\t\tseries: ${n?JSON.stringify(trans(t["y[]"].map(t=>a[r[t]])).map((t,a)=>({data:t,color:toRGBA(colors[m[a]%12],.2+.2*n[a])}))):JSON.stringify(trans(t["y[]"].map(t=>a[r[t]])).map((t,a)=>({data:t,color:toRGBA(colors[m[a]%12],.4)})))}\n\t\t\t\t\t}\n\t\t\t\t\t`)}else g+="<h6>Parallel Coordinates Chart</h6>"+highcharts(i,["parallelCoordinates"],`\n\t\t\t\t\t{\n\t\t\t\t\t\tchart: {\n\t\t\t\t\t\t\ttype: '${p}',\n\t\t\t\t\t\t},\n\t\t\t\t\t\txAxis: {\n\t\t\t\t\t\t\tcategories: ${JSON.stringify(t["y[]"].map(t=>s[t]))},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tyAxis: ${JSON.stringify(h)},\n\t\t\t\t\t\tcolors: ['rgba(23,198,113,.4)'],\n\t\t\t\t\t\tseries: ${n?JSON.stringify(trans(t["y[]"].map(t=>a[r[t]])).map((t,a)=>({data:t,color:`rgba(23,198,113,${.2+.2*n[a]})`}))):JSON.stringify(trans(t["y[]"].map(t=>a[r[t]])).map(t=>({data:t})))}\n\t\t\t\t\t}\n\t\t\t\t\t`);return{title:"Parallel Coordinates Chart",vars:o,body:l+g}};