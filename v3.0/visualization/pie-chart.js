importScripts("../v3.0/utils.js");export const index=(e,a,t,n,i,r)=>{e["g[]"]=JSON.parse("["+e.gOrder+"]");const l=Date.now();let s=e["y[]"].map(e=>i[e]).join(", "),o=Ô(a[0].length,s,e["g[]"].length?`by <b>${e["g[]"].map(e=>i[e]).join(", ")}</b>`:""),g=e["y[]"].map(e=>!a[n[e]].some(e=>null===e||isNaN(e))&&!r.find(a=>a[0]==i[e])&&ʹ(mean(a[n[e]],t))),h="";var m=[],p=["Sum","Frequency"][e.a];for(let a=0,t=g.length;a<t;a++)if(!1===g[a])return{error:`Invalid variable: <b class="text-warning">${i[e["y[]"][a]]}</b> contains non-numeric value`+shake("y[]")};for(let t=0,r=e["g[]"].length;t<r;t++)if(m[t]=a[n[e["g[]"][t]]].unq(),m[t].length>100)return{error:`Invalid group: <b class="text-warning">${i[e["g[]"][t]]}</b> contains more than 100 unique values`+shake("g[]")};const c=[sum,len][e.a];return e["y[]"].forEach((t,s)=>{if(m[1]){let o=split(a,n[e["g[]"][0]]),f=o.map(a=>split(a,n[e["g[]"][1]])).map((a,l)=>a.map((a,o)=>({color:toRGBA(colors[l%12],.75),name:vlabel(a[n[e["g[]"][1]]][0],r,i[e["g[]"][1]]),y:ʺ(c(a[n[t]],a[n[e.weight]]),g[s])})));h+=(s?"<hr>":"")+`<h6>${i[t]}</h6>`+highcharts(l+s,["pie","pieDouble"],JSON.stringify({series:[{size:"61%",dataLabels:{format:"<b>{point.name}</b>",style:{color:"#fff",textOutline:"1px contrast"},distance:-54},name:`${p} of ${i[t]}`,data:o.map((a,l)=>({name:vlabel(m[0][l],r,i[e["g[]"][0]]),y:ʺ(c(a[n[t]],a[n[e.weight]]),g[s])}))},{size:"90%",innerSize:"71%",name:`${p} of ${i[t]}`,data:[].concat.apply([],f)}]}))}else h+=(s?"<hr>":"")+`<h6>${i[t]}</h6>`+highcharts(l+s,["pie"],JSON.stringify({series:[{name:`${p} of ${i[t]}`,data:split(a,n[e["g[]"][0]]).map((a,l)=>({name:vlabel(m[0][l],r,i[e["g[]"][0]]),y:ʺ(c(a[n[t]],a[n[e.weight]]),g[s])}))}]}))}),{title:"Pie Chart",vars:s,body:o+(h+=highchartsReflow(e["y[]"].map((e,a)=>l+a)))}};