importScripts("../v3.0/utils.js");export const index=(t,n,e,r,a,i)=>{const s=Date.now();let l=t["z[]"].map(t=>a[t]).join(", "),h=Ô(n[0].length,l,`by <b>${a[t.x]} and ${a[t.y]}</b>`),o=t["z[]"].map(t=>!n[r[t]].some(t=>null===t||isNaN(t))&&ʹ(mean(n[r[t]],e))),g="";for(let n=0,e=o.length;n<e;n++)if(!1===o[n])return{error:`Invalid variable: <b class="text-warning">${a[t["z[]"][n]]}</b> contains non-numeric value`+shake("z[]")};t.a;var c=[n[r[t.x]].unq(),n[r[t.y]].unq()],u=[c[0].map(n=>vlabel(n,i,a[t.x])),c[1].map(n=>vlabel(n,i,a[t.y]))];if(c[0].length>200)return{error:`Invalid group: <b class="text-warning">${a[t.x]}</b> contains more than 200 unique values`+shake("x")};if(c[1].length>200)return{error:`Invalid group: <b class="text-warning">${a[t.y]}</b> contains more than 200 unique values`+shake("y")};const x=[sum,len,mean][t.a];var p,b=trans(n),y=[];c[0].forEach((n,e)=>{c[1].forEach((a,i)=>{let s=b.filter(e=>e[r[t.x]]===n&&e[r[t.y]]===a);s.length?(s=trans(s),t["z[]"].forEach((n,a)=>{y[a]?y[a].push([e,i,ʺ(x(s[r[n]],s[r[t.weight]]),o[a])]):y[a]=[[e,i,ʺ(x(s[r[n]],s[r[t.weight]]),o[a])]]})):t["z[]"].forEach((t,n)=>{y[n]?y[n].push([e,i,null]):y[n]=[[e,i,null]]})})});const f=p=c[1].length<7?35*c[1].length+80:c[1].length<15?30*c[1].length+80:c[1].length<30?22*c[1].length+80:c[1].length<50?18*c[1].length+80:c[1].length<100?15*c[1].length+80:12*c[1].length+80;return t["z[]"].forEach((n,e)=>{g+=(e?"<hr>":"")+`<h6>${a[n]}</h6>`+highcharts(s+e,["heatMap"],`{\n\t\t\t\tchart: {\n\t\t\t\t\theight: ${p},\n\t\t\t\t},\n\t\t\t\tseries: [{\n\t\t\t\t\tborderWidth: .5,\n\t\t\t\t\tborderColor: Highcharts.getOptions().colors[${e}],\n\t\t\t\t\tdata: ${JSON.stringify(y[e])}\n\t\t\t\t}],\n\t\t\t\txAxis: { categories: ${JSON.stringify(u[0])} },\n\t\t\t\tyAxis: { categories: ${JSON.stringify(u[1])}, title: null },\n\t\t\t\tcolorAxis: { maxColor: Highcharts.getOptions().colors[${e}] },\n\t\t\t\ttooltip: {\n\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\treturn '${a[t.x]}: '+ this.series.xAxis.categories[this.point.x] +'<br>${a[t.y]}: '+ this.series.yAxis.categories[this.point.y] +'<br><b>${a[n]}: '+ this.point.value;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\ty: -6,\n\t\t\t\t\tsymbolHeight: ${f-80-15}\n\t\t\t\t},\n\t\t\t}`)}),{title:"Heat Map",vars:l,body:h+(g+=highchartsReflow(t["z[]"].map((t,n)=>s+n)))}};