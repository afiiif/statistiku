importScripts("../v3.0/utils.js");export const index=(t,n,e,a,r,i)=>{const s=Date.now();let l=t["z[]"].map(t=>r[t]).join(", "),h=Ô(n[0].length,l,`by <b>${r[t.x]} and ${r[t.y]}</b>`),o=t["z[]"].map(t=>!n[a[t]].some(t=>null===t||isNaN(t))&&ʹ(mean(n[a[t]],e))),g="";for(let n=0,e=o.length;n<e;n++)if(!1===o[n])return{error:`Invalid variable: <b class="text-warning">${r[t["z[]"][n]]}</b> contains non-numeric value`+shake("z[]")};t.a;var c=[n[a[t.x]].unq(),n[a[t.y]].unq()],u=[c[0].map(n=>vlabel(n,i,r[t.x])),c[1].map(n=>vlabel(n,i,r[t.y]))];if(c[0].length>200)return{error:`Invalid group: <b class="text-warning">${r[t.x]}</b> contains more than 200 unique values`+shake("x")};if(c[1].length>200)return{error:`Invalid group: <b class="text-warning">${r[t.y]}</b> contains more than 200 unique values`+shake("y")};const d=[sum,len,mean][t.a];var x,p=trans(n),b=[];return c[0].forEach((n,e)=>{c[1].forEach((r,i)=>{data=p.filter(e=>e[a[t.x]]===n&&e[a[t.y]]===r),data.length?(data=trans(data),t["z[]"].forEach((n,r)=>{b[r]?b[r].push([e,i,ʺ(d(data[a[n]],data[a[t.weight]]),o[r])]):b[r]=[[e,i,ʺ(d(data[a[n]],data[a[t.weight]]),o[r])]]})):t["z[]"].forEach((t,n)=>{b[n]?b[n].push([e,i,null]):b[n]=[[e,i,null]]})})}),x=c[1].length<7?35*c[1].length+80:c[1].length<15?30*c[1].length+80:c[1].length<30?22*c[1].length+80:c[1].length<50?18*c[1].length+80:c[1].length<100?15*c[1].length+80:12*c[1].length+80,legendHeight=x,t["z[]"].forEach((n,e)=>{g+=(e?"<hr>":"")+`<h6>${r[n]}</h6>`+highcharts(s+e,["heatMap"],`{\n\t\t\t\tchart: {\n\t\t\t\t\theight: ${x},\n\t\t\t\t},\n\t\t\t\tseries: [{\n\t\t\t\t\tborderWidth: .5,\n\t\t\t\t\tborderColor: Highcharts.getOptions().colors[${e}],\n\t\t\t\t\tdata: ${JSON.stringify(b[e])}\n\t\t\t\t}],\n\t\t\t\txAxis: { categories: ${JSON.stringify(u[0])} },\n\t\t\t\tyAxis: { categories: ${JSON.stringify(u[1])}, title: null },\n\t\t\t\tcolorAxis: { maxColor: Highcharts.getOptions().colors[${e}] },\n\t\t\t\ttooltip: {\n\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\treturn '${r[t.x]}: '+ this.series.xAxis.categories[this.point.x] +'<br>${r[t.y]}: '+ this.series.yAxis.categories[this.point.y] +'<br><b>${r[n]}: '+ this.point.value;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\ty: -6,\n\t\t\t\t\tsymbolHeight: ${legendHeight-80-15}\n\t\t\t\t},\n\t\t\t}`)}),{title:"Heat Map",vars:l,body:h+(g+=highchartsReflow(t["z[]"].map((t,n)=>s+n)))}};